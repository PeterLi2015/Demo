@{
    ViewBag.Title = "小水滴代理系统";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}
@using PagedList;
@using XDropsWater.Model;
@using PagedList.Mvc;
@using System.Collections.Generic;
@model Tuple<IPagedList<MemberModel>, AddMemberModel>

<style type="text/css">
    .clear:after {
        display: block;
        clear: both;
        content: ".";
        visibility: hidden;
        height: 0;
    }

    .clear {
        zoom: "1";
    }
</style>

@Scripts.Render("~/Content/AdminLTE-2.3.6/plugins/datatables/jquery.dataTables.min.js")
@Scripts.Render("~/Content/AdminLTE-2.3.6/plugins/datatables/dataTables.bootstrap.min.js")
@Scripts.Render("~/Content/bootstrapvalidator/dist/js/bootstrapValidator.min.js")

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            代理管理
            <small>Version 1.0</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-dashboard"></i>主页</a></li>
            <li class="active">代理管理</li>
        </ol>
    </section>

    <section class="content">
        <!-- /.row -->
        <div class="row">

            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header">
                        <div class="col-lg-6">
                            <div class="input-group">
                                <input id="txtSearch" type="text" class="form-control" placeholder="电话号码或姓名">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button" id="btnSearch">查询</button>
                                </span>
                                @{
                                    UserSummary user = Session["CurUser"] as UserSummary;
                                    if (user.UserRoleID == (int)enmRoles.All)
                                    {
                                        <span class="input-group-btn">
                                            <button class="btn btn-primary" data-toggle="modal" data-target="#memManageModal" type="button" style="margin-left: 5px; border-radius: 2px; -moz-border-radius: 2px;">添加</button>
                                        </span>
                                    }
                                }

                            </div>

                            <!-- /input-group -->
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        <div id="example2_wrapper" class="dataTables_wrapper form-inline dt-bootstrap">
                            <div class="row">
                                <div class="col-sm-6"></div>
                                <div class="col-sm-6"></div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12 table-responsive" id="ProductList">
                                    @Html.Partial("ProductList", Model.Item1)

                                </div>
                            </div>

                        </div>
                        <!-- /.box-body -->
                    </div>

                </div>
            </div>
        </div>

        <div class="modal fade" id="memManageModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="memManageModalLabel">添加代理</h4>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("AddMember", "Member", FormMethod.Post, new Dictionary<string, object> { { "id", "frmAdd" } }))
                        {
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Item2.ID)

                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Item2.Mobile, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.Item2.Mobile,
                                        htmlAttributes: new Dictionary<string, object>
                                        {
                                            { "class", "form-control" },
                                            { "data-bv-message","手机号码无效" },
                                            { "required data-bv-notempty-message", "手机号码必填" },
                                            {"pattern","^1\\d{10}$" },
                                            {"data-bv-regexp-message","手机号码必须是以1开头的11位数字"}
                                        })
                                    @Html.ValidationMessageFor(model => model.Item2.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Item2.MemberName, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.Item2.MemberName, htmlAttributes: new Dictionary<string, object>
                                        {
                                            { "class", "form-control" },
                                            { "data-bv-message","姓名无效" },
                                            { "required data-bv-notempty-message", "姓名必填" },
                                        })
                                    @Html.ValidationMessageFor(model => model.Item2.MemberName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Item2.IdentityNo, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.Item2.IdentityNo, htmlAttributes: new Dictionary<string, object>
                                        {
                                            { "class", "form-control" },

                                        })
                                    @Html.ValidationMessageFor(model => model.Item2.IdentityNo, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Item2.Address, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextAreaFor(model => model.Item2.Address, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Item2.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Item2.RoleList, htmlAttributes: new { @class = "control-label" })
                                    @*@Html.DropDownListFor(model => model.RoleList, new (IEnumerable<SelectedListItem>{ Items = Model.RoleList.Select(item => new SelectListItem() { Text = item.Name, Value = item.Id } }), new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.DropDownListFor(model => model.Item2.RoleList, new SelectList(Model.Item2.RoleList, "Id", "Name"),
                                    htmlAttributes: new Dictionary<string, object>
                                        {
                                            { "class", "form-control" },
                                            { "data-bv-message","级别无效" },
                                            { "required data-bv-notempty-message", "级别必选" },
                                        })
                                    @Html.ValidationMessageFor(model => model.Item2.RoleList, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Item2.ProvinceAvailableList, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.Item2.ProvinceAvailableList, new SelectList(Model.Item2.ProvinceAvailableList, "Id", "Name"),
                                    htmlAttributes: new Dictionary<string, object>
                                        {
                                            { "class", "form-control" },
                                            { "data-bv-message","必选" },
                                            { "required data-bv-notempty-message", "必选" },
                                        })
                                    @Html.ValidationMessageFor(model => model.Item2.ProvinceAvailableList, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Item2.GeneralAvailableList, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.Item2.GeneralAvailableList, new SelectList(Model.Item2.GeneralAvailableList, "Id", "Name"),
                                    htmlAttributes: new Dictionary<string, object>
                                        {
                                            { "class", "form-control" },
                                            { "data-bv-message","必选" },
                                            { "required data-bv-notempty-message", "必选" },
                                        })
                                    @Html.ValidationMessageFor(model => model.Item2.GeneralAvailableList, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">

                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Item2.ParentMobile, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.Item2.ParentMobile, htmlAttributes: new Dictionary<string, object>
                                        {
                                            { "class", "form-control" },
                                            { "data-bv-message","手机号码无效" },
                                            {"pattern","^1\\d{10}$" },
                                            {"data-bv-regexp-message","手机号码必须是以1开头的11位数字"},
                                            {"data-bv-remote","true"},
                                            {"data-bv-remote-name","mobile"},
                                            {"data-bv-remote-url",@Url.Action("CheckMobile","Member")},
                                            {"data-bv-remote-message","手机号码不存在"},
                                            {"data-bv-remote-delay","1000"},

                                            {"onkeyup","getParentName(this)"}


                                        })
                                    @Html.ValidationMessageFor(model => model.Item2.ParentMobile, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Item2.ParentMemberName, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextBoxFor(model => model.Item2.ParentMemberName, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.Item2.ParentMemberName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group has-error">
                                <div class="col-sm-offset-1  col-sm-10">
                                    <span class="help-block" id="errors"></span>
                                </div>
                            </div>

                        </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                        <button type="button" id="btnAdd" class="btn btn-primary" onclick="$('#frmAdd').submit()">保存</button>
                    </div>
                </div>
            </div>
        </div>


        <div class="modal fade" id="memManageRoleStock" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="memManageRoleStockLabel">修改当前角色库存</h4>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("UpdateCurrentRoleStock", "Member", FormMethod.Post, new Dictionary<string, object> { { "id", "frmCurrentRoleStock" } }))
                        {
                            <div class="form-horizontal">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Item2.TotalQuantity, htmlAttributes: new { @class = "control-label" })
                                            @Html.TextBoxFor(model => model.Item2.TotalQuantity,
                                        htmlAttributes: new Dictionary<string, object>
                                        {
                                            { "class", "form-control" },
                                            {"pattern","^\\d+$" },
                                            {"data-bv-regexp-message","库存必须是数字"}

                                        })
                                            @Html.ValidationMessageFor(model => model.Item2.TotalQuantity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.Item2.CurrentRoleQuantity, htmlAttributes: new { @class = "control-label" })
                                            @Html.TextBoxFor(model => model.Item2.CurrentRoleQuantity,
                                        htmlAttributes: new Dictionary<string, object>
                                        {
                                            { "class", "form-control" },
                                            {"pattern","^\\d+$" },
                                            {"data-bv-regexp-message","当前角色库存必须是数字"}

                                        })
                                            @Html.ValidationMessageFor(model => model.Item2.CurrentRoleQuantity, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group has-error">
                                    <div class="col-sm-offset-1  col-sm-10">
                                        <span class="help-block" id="errors1"></span>
                                    </div>
                                </div>

                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
                        <button type="button" id="btnAdd1" class="btn btn-primary" onclick="$('#frmCurrentRoleStock').submit()">保存</button>
                    </div>
                </div>
            </div>
        </div>

    </section>


</div>

<script type="text/javascript">
    // Adding popstate event listener to handle browser back button
    window.addEventListener("popstate", function (e) {
        $.ajax({
            url: location.href,
            success: function (result) {
                $('#ProductList').html(result);
            }
        });
    });

    function getUrlVars() {
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    }

    function search() {

        showMsg('正在查询，请稍后...');
        $.post("/Member/MemberManage", { search: $('#txtSearch').val() }, function (result) {
            closeMsg();
            $('#ProductList').html(result);
        });
    }

    $('#memManageModal').on('shown.bs.modal', function (event) {
        $('#frmAdd').bootstrapValidator('resetForm', true);
        if ($(event.relatedTarget).attr('data-item')) {
            var item = $(event.relatedTarget).attr('data-item');
            var model = $.parseJSON(item);
            $('#Item2_ID').val(model.ID);
            $('#Item2_Mobile').val(model.Mobile);
            $('#Item2_MemberName').val(model.MemberName);
            $('#Item2_IdentityNo').val(model.IdentityNo);
            $('#Item2_ParentMobile').val(model.ParentMemberMobile);
            $('#Item2_RoleList').val(model.MemberRoleID);
            $('#Item2_ProvinceAvailableList').val(model.ProvinceAvailable);
            $('#Item2_GeneralAvailableList').val(model.GeneralAvailable);
            $('#Item2_Address').val(model.Address);
            $('#Item2_ParentMemberName').val(model.ParentName);
            $('#memManageModalLabel').html("修改代理");
        }
        else {
            $('#Item2_Mobile').val('');
            $('#Item2_MemberName').val('');
            $('#Item2_IdentityNo').val('');
            $('#Item2_ParentMobile').val('');
            $('#Item2_Address').val('');
            $('#Item2_RoleList').val(0);
            $('#Item2_ProvinceAvailableList').val(0);
            $('#Item2_GeneralAvailableList').val(0);
            $('#Item2_ParentMemberName').val('');
            $('#memManageModalLabel').html("添加代理");
        }

    });

    $('#memManageRoleStock').on('shown.bs.modal', function (event) {
        $('#frmCurrentRoleStock').bootstrapValidator('resetForm', true);
        if ($(event.relatedTarget).attr('data-stock')) {
            var item = $(event.relatedTarget).attr('data-stock');
            var model = $.parseJSON(item);
            $('#Item2_CurrentRoleQuantity').val(model.CurrentRoleQuantity);
            $('#Item2_TotalQuantity').val(model.TotalQuantity);
            $('#Item2_ID').val(model.ID);
            $('#memManageRoleStockLabel').html("修改当前角色库存");
        }
    });

    addLoadEvent(function () {

        @*$('#frmAdd').bootstrapValidator({
            fields: {
                mobile: {
                    message: '手机号码不存在',
                    validators: {
                        // The validator will create an Ajax request
                        // sending { username: 'its value' } to the back-end
                        remote: {
                            message: '手机号码不存在',
                            url: '@Url.Action("CheckMobile","Member")',
                            data: {mobile: '2233'}
                        }
                    }
                }
            }
        });*@

        $("#btnSearch").click(function () {
            search();
        });

        $("#SearchString").keypress(function (e) {
            if (e.keyCode == 13) {
                search();
            }
        });
        var getPage = function () {
            var searchString = $('#txtSearch').val();
            var random = '&random=' + new Date().getTime();
            if (searchString == undefined || searchString == '') {
                searchString = '';
            } else {
                searchString = '&search=' + searchString;
            }
            searchString += random;

            var url = $(this).attr('href') + searchString;
            showMsg('正在翻页，请稍后...');
            $.ajax({
                url: url,
                success: function (result) {
                    closeMsg();
                    $('#ProductList').html(result);
                }
            });

            return false;
        };

        $('body').on('click', '#ProductList .pagination a', getPage);



        $('#frmAdd').bootstrapValidator().on('success.form.bv', function (e) {
            // Prevent form submission
            e.preventDefault();
            $("#btnAdd").attr("disabled", "disabled");
            $form = $('#frmAdd');
            //string mobile, string memberName, string parentMobile, string roleID, string address
            // Use Ajax to submit form data
            var oParam = {
                ID: $('#Item2_ID').val(),
                Mobile: $('#Item2_Mobile').val(),
                MemberName: $('#Item2_MemberName').val(),
                IdentityNo: $('#Item2_IdentityNo').val(),
                ParentMobile: $('#Item2_ParentMobile').val(),
                RoleId: $('#Item2_RoleList').val(),
                Address: $('#Item2_Address').val(),
                ProvinceAvailable: $('#Item2_ProvinceAvailableList').val(),
                GeneralAvailable: $('#Item2_GeneralAvailableList').val(),
            };
            if ($('#memManageModalLabel').html() == "添加代理") {
                $.post($form.attr('action'), oParam, function (result) {
                    setTimeout(function () { location.reload(); }, 1000);
                }).fail(function (xhr, status, error) {
                    $('#errors').html(xhr.responseJSON.message).removeClass('hide');
                    $("#btnAdd").removeAttr('disabled');
                });
            }
            else if ($('#memManageModalLabel').html() == "修改代理") {
                $.post('@Url.Action("UpdateMemberForAdmin", "Member")', oParam, function (result) {
                    setTimeout(function () {
                        bootbox.hideAll();
                        bootbox.alert({
                            message: "修改代理成功！", size: 'small', callback: function () {
                                setTimeout(function () { location.href = location.href; }, 1000);
                            }
                        });
                    }, 1000);

                }).fail(function (xhr, status, error) {
                    $('#errors').html(xhr.responseJSON.message).removeClass('hide');
                    $("#btnAdd").removeAttr('disabled');
                });
            }
        });

    });

    $('#frmCurrentRoleStock').bootstrapValidator().on('success.form.bv', function (e) {
        // Prevent form submission
        e.preventDefault();
        $("#btnAdd1").attr("disabled", "disabled");
        $form = $('#frmCurrentRoleStock');
        //string mobile, string memberName, string parentMobile, string roleID, string address
        // Use Ajax to submit form data
        var oParam = {
            ID: $('#Item2_ID').val(),
           
            CurrentRoleQuantity: $('#Item2_CurrentRoleQuantity').val(),
            TotalQuantity: $('#Item2_TotalQuantity').val(),
        };
        $.post('@Url.Action("UpdateCurrentRoleStock", "Member")', oParam, function (result) {
            setTimeout(function () {
                bootbox.hideAll();
                bootbox.alert({
                    message: "修改当前角色库存成功！", size: 'small', callback: function () {
                        setTimeout(function () { location.href = location.href; }, 1000);
                    }
                });
            }, 1000);

        }).fail(function (xhr, status, error) {
            $('#errors1').html(xhr.responseJSON.message).removeClass('hide');
            $("#btnAdd1").removeAttr('disabled');
        });

    });

    function getParentName(obj) {
        var mobile = $(obj).val();
        $.post("@Url.Action("GetMemberName", "Member")", { mobile: mobile }, function (res) {
            $("#Item2_ParentMemberName").val(res.MemberName);
        });
    }

</script>
